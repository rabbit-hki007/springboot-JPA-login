server.servlet.context-path=/

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

spring.devtools.livereload.enabled=true

# <JPA Settings> - Table 자동생성은 column 순서의 정렬때문에 사용안하기로 하였음
# create, update, validate, none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
##spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.database=
#spring.jpa.hibernate.ddl-auto=none // create, create-drop, validate, update, none
#spring.jpa.generate-ddl=false  //데이터베이스의 고유기능을 사용하는지 체크
#spring.jpa.database=mysql
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.properties.hibernate.format_sql=true

# hibernate logging
logging.level.org.hibernate=info

# mybatis
#mybatis.type-aliases-package=kr.co.wavus.testProj.repository
mybatis.mapper-locations=mybatis/mapper/*.xml
#mybatis.config-location=mapper/mybatis-config.xml


spring.datasource.hikari.maximum-pool-size=4
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://192.168.200.111:5432/testdb
spring.datasource.url=jdbc:postgresql://localhost:5432/testdb
spring.datasource.username=postgres
spring.datasource.password=admin

# spring.datasource.url=jdbc:postgresql://localhost:5432/testDB
